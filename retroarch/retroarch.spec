%define 	build_timestamp %(date +"%Y%m%d")
%define		enabled_cores mednafen_snes

Name:		retroarch
Version:	gitbuild
Release:	%{build_timestamp}.1%{?dist}
Summary:	Cross-platform, sophisticated frontend for the libretro API. 

Group:		Games	
License:	GPLv3.0
URL:		https://www.retroarch.com
Source0:	https://github.com/libretro/libretro-super/archive/refs/tags/Latest.tar.gz

Patch0:		build.patch

#BuildRequires:	libstdc++-static
BuildRequires:	pulseaudio-libs-devel
BuildRequires:	SDL2-devel
BuildRequires:  libXxf86vm-devel

# g++
# libgl1-mesa-dev
# libsdl2-dev
# mesa-common-dev
# pkg-config
# Also, you may need one of the following if RetroArch is to run audio:

# alsa (libsdl2-dev)
# libpulse (libpulse-dev)
# lossaudo
# lopenal (libopenal-dev)
# jack
# libroar (libroar-dev) WARNING: This might break your compilation.
# rsound
#BuildRequires:	
#Requires:	

%description
RetroArch is the reference frontend for the libretro API. Popular examples of implementations 
for this API includes video game system emulators and game engines as well as more generalized 
3D programs. These programs are instantiated as dynamic libraries. We refer to these as 
"libretro cores".

%prep
%setup -q -n libretro-super-Latest
echo "# Auto generated by rpm retroarche build" > build-config.sh
for core in `echo %enabled_cores`
do
	echo "include_core_$core" >> build-config.sh
done
%patch0 -p1

# fetch all
sh ./libretro-fetch.sh 

# configure retroarch
cd retroarch
./configure --prefix=/usr

%build
# compile retroarch
cd retroarch
make -j $(nprocs)

# build the libretro files
cd ../
./libretro-build.sh

%install
# install retroarch
cd retroatch
DESTDIR=%{buildroot} make install 

# install all other files
./libretro-install.sh %{buildroot}/usr/lib64/libretro

%files
%doc



%changelog

